<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(find kth_navigation)/models:$(find fetch_gazebo)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <arg name="robot" default="fetch"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="true"/>
  <arg name="world" default="$(optenv KTH_WORLD)" />
  <arg name="world_file" default="$(find kth_navigation)/worlds/$(arg world).world" />
  <arg name="rviz_args" value="-d $(find kth_navigation)/rviz/config.rviz" />

<!-- Using maps generated by ros -->
  <group if="$(optenv USE_ROS_MAP)" >
    <arg name="map" value="$(find kth_navigation)/ros_maps/$(arg world)/map.yaml" />
    <arg name="results_folder" value="/tmp/$(arg world)_ros" />

    <!-- Start Gazebo with a blank world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="headless" value="$(arg headless)"/>
      <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Oh, you wanted a robot? -->
    <include file="$(find fetch_gazebo)/launch/include/$(arg robot).launch.xml" />
    <include file="$(find fetch_navigation)/launch/fetch_nav.launch">
      <arg name="map_file" value="$(arg map)" />
    </include>

    <node name="simulator" pkg="kth_navigation" type="simulate.py" output="screen" required="true">
      <param name="robot" value="$(arg robot)" />
      <param name="gazebo_frame" value="world" />
      <param name="amcl_frame" value="map" />
      <param name="results_folder" value="$(arg results_folder)" />
    </node>

    <node name="amcl_pose_server" pkg="kth_navigation" type="pose_server.py" />

  </group>
<!-- Using generated maps from xml definitions -->
  <group unless="$(optenv USE_ROS_MAP)" >
    <arg name="map" default="$(find kth_navigation)/maps/$(arg world)/map.yaml" />
    <arg name="results_folder" default="/tmp/$(arg world)" />

    <!-- Start Gazebo with a blank world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="headless" value="$(arg headless)"/>
      <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Oh, you wanted a robot? -->
    <include file="$(find fetch_gazebo)/launch/include/$(arg robot).launch.xml" />
    <include file="$(find fetch_navigation)/launch/fetch_nav.launch">
      <arg name="map_file" value="$(arg map)" />
    </include>

    <node name="simulator" pkg="kth_navigation" type="simulate.py" output="screen" required="true">
      <param name="robot" value="$(arg robot)" />
      <param name="gazebo_frame" value="world" />
      <param name="amcl_frame" value="map" />
      <param name="results_folder" value="$(arg results_folder)" />
    </node>

    <node name="amcl_pose_server" pkg="kth_navigation" type="pose_server.py" />
  </group>
</launch>
